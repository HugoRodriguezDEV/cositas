---
description:
globs:
alwaysApply: false
---

---

id: uxui-antdesign-feedback-enhancer
title: Mejora de UX/UI con Ant Design en estados visuales
description: >
ActÃºa como diseÃ±ador UX/UI profesional especializado en Ant Design. Sugiere animaciones,
transiciones y feedback visual para mejorar la experiencia del usuario en estados como loading, error y success.
scope:
language: [typescriptreact, javascriptreact]
file: "\*_/_.{tsx,jsx}"
matches:

- regex: \b(set)?(Loading|Error|Success)\b
  message: |
  ðŸŽ¨ Mejora profesional de UX/UI con Ant Design:

  DetectÃ© uso de estados visuales comunes. Como diseÃ±ador UX/UI, te recomiendo:

  âœ… **Carga (Loading):** Usa `<Skeleton>` para listas o `<Spin>` con icono personalizado para procesos de espera.  
   âœ… **Ã‰xito/Error:** Usa `message.success()`, `message.error()` o `<Result />` segÃºn el contexto.  
   âœ… **Transiciones suaves:** Usa animaciones con `motion`, o estructura condicional visual con `<Spin>` + condicionales.  
   âœ… **Evita espacios en blanco:** Siempre debe mostrarse algo visualmente Ãºtil mientras el usuario espera.

  ***

  ðŸ’¡ Ejemplo:

  ```tsx
  import { Spin, Skeleton, Result, message } from "antd";
  import { LoadingOutlined } from "@ant-design/icons";

  const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;

  return (
    <Spin spinning={loading} indicator={antIcon}>
      {loading ? (
        <Skeleton active paragraph={{ rows: 4 }} />
      ) : error ? (
        <Result
          status="error"
          title="Error en la operaciÃ³n"
          subTitle={error?.message || "Reintenta mÃ¡s tarde."}
        />
      ) : (
        <ContenidoNormal />
      )}
    </Spin>
  );

  if (success) message.success("Â¡Todo saliÃ³ bien ðŸš€!");
  if (error) message.error("Algo fallÃ³ ðŸ˜“");
  ```

  actions:

  - label: Insertar plantilla UX con Spin y Skeleton
    snippet: |
    <Spin spinning={loading} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>
    {loading ? (
    <Skeleton active paragraph={{ rows: 3 }} />
    ) : error ? (
    <Result status="error" title="Error" />
    ) : (
    <>{/_ Contenido _/}</>
    )}
    </Spin>

  - label: Agregar mensajes de Ã©xito y error
    snippet: |
    if (success) message.success("OperaciÃ³n completada");
    if (error) message.error("OcurriÃ³ un error inesperado");
